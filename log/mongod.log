2020-07-09T14:50:42.689+0700 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2020-07-09T14:50:42.697+0700 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-07-09T14:50:42.700+0700 I  CONTROL  [main] Trying to start Windows service 'MongoDB'
2020-07-09T14:50:42.702+0700 I  CONTROL  [initandlisten] MongoDB starting : pid=7276 port=27017 dbpath=C:\Users\Lenovo\Desktop\go-work\src\github.com\socmed\data 64-bit host=DESKTOP-4649VKN
2020-07-09T14:50:42.703+0700 I  CONTROL  [initandlisten] targetMinOS: Windows 7/Windows Server 2008 R2
2020-07-09T14:50:42.703+0700 I  CONTROL  [initandlisten] db version v4.2.8
2020-07-09T14:50:42.704+0700 I  CONTROL  [initandlisten] git version: 43d25964249164d76d5e04dd6cf38f6111e21f5f
2020-07-09T14:50:42.705+0700 I  CONTROL  [initandlisten] allocator: tcmalloc
2020-07-09T14:50:42.705+0700 I  CONTROL  [initandlisten] modules: none
2020-07-09T14:50:42.705+0700 I  CONTROL  [initandlisten] build environment:
2020-07-09T14:50:42.705+0700 I  CONTROL  [initandlisten]     distmod: 2012plus
2020-07-09T14:50:42.705+0700 I  CONTROL  [initandlisten]     distarch: x86_64
2020-07-09T14:50:42.705+0700 I  CONTROL  [initandlisten]     target_arch: x86_64
2020-07-09T14:50:42.706+0700 I  CONTROL  [initandlisten] options: { config: "C:\Users\Lenovo\Desktop\go-work\src\github.com\socmed\bin\mongod.cfg", net: { bindIp: "127.0.0.1", port: 27017 }, service: true, storage: { dbPath: "C:\Users\Lenovo\Desktop\go-work\src\github.com\socmed\data", journal: { enabled: true } }, systemLog: { destination: "file", logAppend: true, path: "C:\Users\Lenovo\Desktop\go-work\src\github.com\socmed\log\mongod.log" } }
2020-07-09T14:50:42.724+0700 I  STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=4566M,cache_overflow=(file_max=0M),session_max=33000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000,close_scan_interval=10,close_handle_minimum=250),statistics_log=(wait=0),verbose=[recovery_progress,checkpoint_progress],
2020-07-09T14:50:42.868+0700 I  STORAGE  [initandlisten] WiredTiger message [1594281042:868068][7276:140723173482064], txn-recover: Set global recovery timestamp: (0, 0)
2020-07-09T14:50:42.915+0700 I  RECOVERY [initandlisten] WiredTiger recoveryTimestamp. Ts: Timestamp(0, 0)
2020-07-09T14:50:42.979+0700 I  STORAGE  [initandlisten] Timestamp monitor starting
2020-07-09T14:50:43.012+0700 I  CONTROL  [initandlisten] 
2020-07-09T14:50:43.012+0700 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2020-07-09T14:50:43.013+0700 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2020-07-09T14:50:43.013+0700 I  CONTROL  [initandlisten] 
2020-07-09T14:50:43.020+0700 I  STORAGE  [initandlisten] createCollection: admin.system.version with provided UUID: 77e38be3-f120-4f04-a8a5-e8f64772f367 and options: { uuid: UUID("77e38be3-f120-4f04-a8a5-e8f64772f367") }
2020-07-09T14:50:43.073+0700 I  INDEX    [initandlisten] index build: done building index _id_ on ns admin.system.version
2020-07-09T14:50:43.079+0700 I  SHARDING [initandlisten] Marking collection admin.system.version as collection version: <unsharded>
2020-07-09T14:50:43.080+0700 I  COMMAND  [initandlisten] setting featureCompatibilityVersion to 4.2
2020-07-09T14:50:43.081+0700 I  SHARDING [initandlisten] Marking collection local.system.replset as collection version: <unsharded>
2020-07-09T14:50:43.082+0700 I  STORAGE  [initandlisten] Flow Control is enabled on this deployment.
2020-07-09T14:50:43.083+0700 I  SHARDING [initandlisten] Marking collection admin.system.roles as collection version: <unsharded>
2020-07-09T14:50:43.086+0700 I  STORAGE  [initandlisten] createCollection: local.startup_log with generated UUID: 81dcb7dc-24e4-479f-b691-757110a49a42 and options: { capped: true, size: 10485760 }
2020-07-09T14:50:43.130+0700 I  INDEX    [initandlisten] index build: done building index _id_ on ns local.startup_log
2020-07-09T14:50:43.131+0700 I  SHARDING [initandlisten] Marking collection local.startup_log as collection version: <unsharded>
2020-07-09T14:50:46.724+0700 I  FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory 'C:/Users/Lenovo/Desktop/go-work/src/github.com/socmed/data/diagnostic.data'
2020-07-09T14:50:47.050+0700 I  SHARDING [LogicalSessionCacheRefresh] Marking collection config.system.sessions as collection version: <unsharded>
2020-07-09T14:50:47.051+0700 I  STORAGE  [LogicalSessionCacheRefresh] createCollection: config.system.sessions with provided UUID: 3111a8cd-d906-4b8d-a8e8-d97594ddcd27 and options: { uuid: UUID("3111a8cd-d906-4b8d-a8e8-d97594ddcd27") }
2020-07-09T14:50:47.063+0700 I  SHARDING [ftdc] Marking collection local.oplog.rs as collection version: <unsharded>
2020-07-09T14:50:47.093+0700 I  NETWORK  [listener] Listening on 127.0.0.1
2020-07-09T14:50:47.094+0700 I  NETWORK  [listener] waiting for connections on port 27017
2020-07-09T14:50:47.094+0700 I  STORAGE  [initandlisten] Service running
2020-07-09T14:50:47.226+0700 I  INDEX    [LogicalSessionCacheRefresh] index build: done building index _id_ on ns config.system.sessions
2020-07-09T14:50:47.260+0700 I  INDEX    [LogicalSessionCacheRefresh] index build: starting on config.system.sessions properties: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 } using method: Hybrid
2020-07-09T14:50:47.260+0700 I  INDEX    [LogicalSessionCacheRefresh] build may temporarily use up to 200 megabytes of RAM
2020-07-09T14:50:47.260+0700 I  INDEX    [LogicalSessionCacheRefresh] index build: collection scan done. scanned 0 total records in 0 seconds
2020-07-09T14:50:47.398+0700 I  INDEX    [LogicalSessionCacheRefresh] index build: inserted 0 keys from external sorter into index in 0 seconds
2020-07-09T14:50:47.430+0700 I  INDEX    [LogicalSessionCacheRefresh] index build: done building index lsidTTLIndex on ns config.system.sessions
2020-07-09T14:50:47.484+0700 I  COMMAND  [LogicalSessionCacheRefresh] command config.system.sessions command: createIndexes { createIndexes: "system.sessions", indexes: [ { key: { lastUse: 1 }, name: "lsidTTLIndex", expireAfterSeconds: 1800 } ], $db: "config" } numYields:0 reslen:114 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 2 } }, ReplicationStateTransition: { acquireCount: { w: 3 } }, Global: { acquireCount: { r: 1, w: 2 } }, Database: { acquireCount: { r: 1, w: 2, W: 1 } }, Collection: { acquireCount: { r: 4, w: 1, R: 1, W: 2 } }, Mutex: { acquireCount: { r: 3 } } } flowControl:{ acquireCount: 1, timeAcquiringMicros: 1 } storage:{} protocol:op_msg 432ms
2020-07-09T14:50:47.484+0700 I  COMMAND  [LogicalSessionCacheReap] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 }, acquireWaitCount: { r: 1 }, timeAcquiringMicros: { r: 398132 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 398ms
2020-07-09T14:50:47.484+0700 I  SHARDING [LogicalSessionCacheReap] Marking collection config.transactions as collection version: <unsharded>
2020-07-09T15:25:33.731+0700 I  NETWORK  [listener] connection accepted from 127.0.0.1:65071 #1 (1 connection now open)
2020-07-09T15:25:33.740+0700 I  NETWORK  [conn1] received client metadata from 127.0.0.1:65071 conn1: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.2.8" }, os: { type: "Windows", name: "Microsoft Windows 10", architecture: "x86_64", version: "10.0 (build 18362)" } }
2020-07-09T15:25:55.523+0700 I  NETWORK  [conn1] end connection 127.0.0.1:65071 (0 connections now open)
2020-07-09T15:26:07.472+0700 I  NETWORK  [listener] connection accepted from 127.0.0.1:65086 #2 (1 connection now open)
2020-07-09T15:26:07.483+0700 I  NETWORK  [conn2] received client metadata from 127.0.0.1:65086 conn2: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.2.8" }, os: { type: "Windows", name: "Microsoft Windows 10", architecture: "x86_64", version: "10.0 (build 18362)" } }
2020-07-09T20:40:09.269+0700 I  NETWORK  [listener] connection accepted from 127.0.0.1:51328 #3 (2 connections now open)
2020-07-09T20:40:09.287+0700 I  NETWORK  [conn3] received client metadata from 127.0.0.1:51328 conn3: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.2.8" }, os: { type: "Windows", name: "Microsoft Windows 10", architecture: "x86_64", version: "10.0 (build 18362)" } }
2020-07-09T20:42:40.481+0700 I  NETWORK  [conn3] end connection 127.0.0.1:51328 (1 connection now open)
2020-07-09T20:43:14.233+0700 I  NETWORK  [listener] connection accepted from 127.0.0.1:51343 #4 (2 connections now open)
2020-07-09T20:43:14.238+0700 I  NETWORK  [conn4] received client metadata from 127.0.0.1:51343 conn4: { driver: { name: "mongo-go-driver", version: "v1.2.1" }, os: { type: "windows", architecture: "amd64" }, platform: "go1.12.17" }
2020-07-09T20:43:14.540+0700 I  NETWORK  [listener] connection accepted from 127.0.0.1:51345 #5 (3 connections now open)
2020-07-09T20:43:14.540+0700 I  NETWORK  [conn5] received client metadata from 127.0.0.1:51345 conn5: { driver: { name: "mongo-go-driver", version: "v1.2.1" }, os: { type: "windows", architecture: "amd64" }, platform: "go1.12.17", application: { name: "mongostat" } }
2020-07-09T20:43:34.158+0700 I  NETWORK  [conn4] end connection 127.0.0.1:51343 (2 connections now open)
2020-07-09T20:43:34.158+0700 I  NETWORK  [conn5] end connection 127.0.0.1:51345 (1 connection now open)
2020-07-09T20:43:42.507+0700 I  NETWORK  [listener] connection accepted from 127.0.0.1:51348 #6 (2 connections now open)
2020-07-09T20:43:42.507+0700 I  NETWORK  [conn6] received client metadata from 127.0.0.1:51348 conn6: { driver: { name: "mongo-go-driver", version: "v1.2.1" }, os: { type: "windows", architecture: "amd64" }, platform: "go1.12.17" }
2020-07-09T20:43:42.808+0700 I  NETWORK  [listener] connection accepted from 127.0.0.1:51350 #7 (3 connections now open)
2020-07-09T20:43:42.809+0700 I  NETWORK  [conn7] received client metadata from 127.0.0.1:51350 conn7: { driver: { name: "mongo-go-driver", version: "v1.2.1" }, os: { type: "windows", architecture: "amd64" }, platform: "go1.12.17", application: { name: "mongotop" } }
2020-07-09T20:43:53.976+0700 I  NETWORK  [conn6] end connection 127.0.0.1:51348 (2 connections now open)
2020-07-09T20:43:53.976+0700 I  NETWORK  [conn7] end connection 127.0.0.1:51350 (1 connection now open)
2020-07-09T21:13:55.535+0700 I  NETWORK  [listener] connection accepted from 127.0.0.1:51581 #8 (2 connections now open)
2020-07-09T21:15:12.339+0700 I  NETWORK  [conn8] end connection 127.0.0.1:51581 (1 connection now open)
2020-07-09T21:31:39.638+0700 I  NETWORK  [conn2] end connection 127.0.0.1:65086 (0 connections now open)
